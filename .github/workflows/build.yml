name: build.yml
on:
    push:
    pull_request:

permissions: {}

jobs:
    find-configs:
        name: 📇 Find configs
        uses: ./.github/workflows/find-configs.yml

    build:
        runs-on: ubuntu-latest
        name: 🏗️ Build
        needs:
            - find-configs
        strategy:
            matrix:
                config: ${{ fromJson(needs.find-configs.outputs.configs) }}
            fail-fast: false
        permissions:
            id-token: write
            attestations: write
        outputs:
            # Hardcoded until https://github.com/actions/runner/pull/2477 is finally working...
            # stats: ${{ toJSON(steps.output.outputs) }}
            line_uzl: ${{ steps.output.outputs.build_uzl }}
            line_cau: ${{ steps.output.outputs.build_cau }}
            line_sandbox405: ${{ steps.output.outputs.build_sandbox405 }}
            line_moodlemootdach: ${{ steps.output.outputs.build_moodlemootdach }}
        steps:
            - name: 🐙 Install GitHub CLI
              shell: bash
              if: ${{ env.ACT && runner.os == 'Linux' }}
              run: |
                  (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
                    && sudo mkdir -p -m 755 /etc/apt/keyrings \
                    && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
                    && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
                    && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
                    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
                    && sudo apt update \
                    && sudo apt install gh -y

            - name: 📥️ checkout
              uses: actions/checkout@v5

            - name: 🏗️ build Better-Moodle for ${{ matrix.config }}
              id: build
              uses: ./.github/actions/build
              with:
                  config: ${{ matrix.config }}

            - name: 🦭 attest build provenance
              uses: actions/attest-build-provenance@v3
              if: github.event.pull_request.head.repo.full_name == github.repository
              with:
                  subject-name: ${{ steps.build.outputs.script }}
                  subject-digest: sha256:${{ steps.build.outputs.digest }}
                  show-summary: true

            - name: 📊 aggregate build statistics
              run: |
                  # get the file names of userscript and polyfills file
                  userscript="${{ steps.build.outputs.script }}"
                  polyfills="${{ steps.build.outputs.polyfills }}"
                  output_dir="${{ steps.build.outputs.dir }}"

                  # stats determined from files
                  echo "STATS_SIZE=$(ls -sh --si $output_dir/$userscript | awk '{print $1}')B" >> $GITHUB_ENV
                  echo "STATS_LINES=$(wc -l $output_dir/$userscript | awk '{print $1}')" >> $GITHUB_ENV
                  echo "STATS_PF_SIZE=$(ls -sh --si $output_dir/$polyfills | awk '{print $1}')B" >> $GITHUB_ENV
                  echo "STATS_PF_LINES=$(wc -l $output_dir/$polyfills | awk '{print $1}')" >> $GITHUB_ENV

                  # stats generated during build process
                  echo "STATS_PERF_CONF=$(cat $output_dir/.stats_perf_conf)" >> $GITHUB_ENV
                  echo "STATS_PERF_BUILD=$(cat $output_dir/.stats_perf_build)" >> $GITHUB_ENV
                  echo "STATS_PERF_TOTAL=$(cat $output_dir/.stats_perf_total)" >> $GITHUB_ENV

            - name: 🔍 find previous run and download artifacts
              id: download-prev
              run: |
                  # find the last successfull run on base branch (for PRs) or this branch (for commits)
                  RUN_ID=$(gh run list \
                    --workflow=build.yml \
                    --branch=${{ github.base_ref || github.ref_name }} \
                    --status=success \
                    --limit=1 \
                    --json databaseId \
                    --jq '.[0].databaseId')

                  DIR=$(mktemp -d)

                  if [[ -n "$RUN_ID" ]]; then
                      gh run download $RUN_ID --name=${{ steps.build.outputs.script }} --dir=$DIR || exit 0
                      gh run download $RUN_ID --name=${{ steps.build.outputs.polyfills }} --dir=$DIR || exit 0

                      echo "dir=$DIR" >> $GITHUB_OUTPUT
                  fi
              env:
                  GH_TOKEN: ${{ github.token }}

            - name: 🧮 calculate diff (script)
              if: ${{ steps.download-prev.outputs.dir }}
              id: diff-script
              uses: ./.github/actions/diff
              with:
                  old: ${{ steps.download-prev.outputs.dir }}/${{ steps.build.outputs.script }}
                  new: ${{ steps.build.outputs.dir }}/${{ steps.build.outputs.script }}

            - name: 🧮 calculate diff (polyfill)
              if: ${{ steps.download-prev.outputs.dir }}
              id: diff-polyfills
              uses: ./.github/actions/diff
              with:
                  old: ${{ steps.download-prev.outputs.dir }}/${{ steps.build.outputs.polyfills }}
                  new: ${{ steps.build.outputs.dir }}/${{ steps.build.outputs.polyfills }}

            - name: ✍️ print build stats in summary
              run: |
                  echo "# 🏗️ ${{ matrix.config }}" >> $GITHUB_STEP_SUMMARY
                  echo "## Built file: \`${{ steps.build.outputs.script }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
                  echo "|-------:|:------|" >> $GITHUB_STEP_SUMMARY
                  # script
                  echo "| **Userscript** | |" >> $GITHUB_STEP_SUMMARY
                  echo "| **File size** | ${{ env.STATS_SIZE }} (${{ steps.diff-script.outputs.size }} Bytes) |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Line count** | ${{ env.STATS_LINES }} (${{ steps.diff-script.outputs.lines }}) |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Diff to prev build (semantic)** | ${{ steps.diff-script.outputs.sem }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Diff to prev build (syntactic)** | ${{ steps.diff-script.outputs.syn }} |" >> $GITHUB_STEP_SUMMARY
                  # polyfills
                  echo "| **Polyfills** | |" >> $GITHUB_STEP_SUMMARY
                  echo "| **File size** | ${{ env.STATS_SIZE }} (${{ steps.diff-polyfills.outputs.size }} Bytes) |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Line count** | ${{ env.STATS_LINES }} (${{ steps.diff-polyfills.outputs.lines }}) |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Diff to prev build (semantic)** | ${{ steps.diff-polyfills.outputs.sem }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Diff to prev build (syntactic)** | ${{ steps.diff-polyfills.outputs.syn }} |" >> $GITHUB_STEP_SUMMARY
                  # stats
                  echo "## Build stats" >> $GITHUB_STEP_SUMMARY
                  echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
                  echo "|-------:|:------|" >> $GITHUB_STEP_SUMMARY
                  echo "| **Creating config duration** | ${{ env.STATS_PERF_CONF }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Building duration** | ${{ env.STATS_PERF_BUILD }} |" >> $GITHUB_STEP_SUMMARY
                  echo "| **Total duration** | **${{ env.STATS_PERF_TOTAL }}** |" >> $GITHUB_STEP_SUMMARY
                  echo "*Durations are mm:ss,s*"

                  echo "## Included features" >> $GITHUB_STEP_SUMMARY
                  cat ${{ steps.build.outputs.dir }}/.stats_features.md >> $GITHUB_STEP_SUMMARY

            - name: 📝 generate output
              id: output
              run: |
                  echo "build_${{ matrix.config }}=| ${{matrix.config}} | ${{ env.STATS_PERF_TOTAL }} | | ${{ env.STATS_SIZE }} (${{ steps.diff-script.outputs.size }}) | ${{ env.STATS_LINES }} (${{ steps.diff-script.outputs.lines }}) | ${{ steps.diff-script.outputs.sem }} | ${{ steps.diff-script.outputs.syn }} | | ${{ env.STATS_PF_SIZE }} (${{ steps.diff-polyfills.outputs.size }}) | ${{ env.STATS_PF_LINES }} (${{ steps.diff-polyfills.outputs.lines }}) | ${{ steps.diff-polyfills.outputs.sem }} | ${{ steps.diff-polyfills.outputs.syn }} |" >> $GITHUB_OUTPUT

    pr-summary:
        runs-on: ubuntu-latest
        name: 📜 update PR Summary
        permissions:
            issues: write
            pull-requests: write
        if: ${{ github.event_name == 'pull_request' && always() }}
        needs:
            - build
        steps:
            - name: 📥️ checkout
              uses: actions/checkout@v5

            - name: 📜 update PR Summary
              uses: ./.github/actions/pr-summary
              with:
                  pr-number: ${{ github.event.pull_request.number }}
                  section: build
                  title: 🏗️ Build
                  # TODO: Do this automagically for all builds?
                  content: |
                      | Config | Duration | | Size | Lines | Diff to ${{ github.base_ref }} (semantic) | Diff to ${{ github.base_ref }} (syntactic) | | Polyfills Size | Polyfill Lines | Polyfill Diff to ${{ github.base_ref }} (semantic) | Polyfill Diff to ${{ github.base_ref }} (syntactic) |
                      | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- |
                      ${{ needs.build.outputs.line_uzl }}
                      ${{ needs.build.outputs.line_cau }}
                      ${{ needs.build.outputs.line_sandbox405 }}
                      ${{ needs.build.outputs.line_moodlemootdach }}
                  app-id: ${{ secrets.CI_APP }}
                  app-pat: ${{ secrets.CI_PAT }}
