on:
    push:
        branches:
            - main

permissions:
    contents: write
    pull-requests: write

name: release-please

jobs:
    release:
        name: üöÄ release-please
        runs-on: ubuntu-latest
        steps:
            - uses: googleapis/release-please-action@v4
              id: release
              with:
                  config-file: .release-please-config.json
                  manifest-file: .release-please-manifest.json
        outputs:
            released: ${{ steps.release.outputs.release_created }}
            tag: ${{ steps.release.outputs.tag_name }}
            updated: ${{ steps.release.outputs.prs_created }}
            pr: ${{ steps.release.outputs.pr }}

    find-configs:
        name: üìá find configs
        needs:
            - release
        # If not released, released will be null but if not updated, updated will be the string 'false'
        if: ${{ needs.release.outputs.released || needs.release.outputs.updated != 'false' }}
        uses: ./.github/workflows/find-configs.yml

    assets:
        name: üì§Ô∏è build release assets and compare or upload
        runs-on: ubuntu-latest
        needs:
            - release
            - find-configs
        strategy:
            matrix:
                config: ${{ fromJson(needs.find-configs.outputs.configs) }}
            fail-fast: false
        steps:
            - name: üì•Ô∏è checkout
              uses: actions/checkout@v5
              with:
                  ref: ${{ needs.release.outputs.pr && fromJson(needs.release.outputs.pr).headBranchName ||¬†'main' }}

            - name: üèóÔ∏è build
              id: build
              uses: ./.github/actions/build
              with:
                  config: ${{ matrix.config }}
                  release: true

            - name: üîç find previous release and download artifacts
              id: download-prev
              run: |
                  DIR=$(mktemp -d)

                  gh release download --pattern "${{ steps.build.outputs.script }}" --pattern "${{ steps.build.outputs.polyfills }}" --dir=$DIR || exit 0

                  echo "dir=$DIR" >> $GITHUB_OUTPUT
              env:
                  GH_TOKEN: ${{ github.token }}

            - name: üßÆ calculate diff (script)
              if: ${{ steps.download-prev.outputs.dir }}
              id: diff-script
              uses: ./.github/actions/diff
              with:
                  old: ${{ steps.download-prev.outputs.dir }}/${{ steps.build.outputs.script }}
                  new: ${{ steps.build.outputs.dir }}/${{ steps.build.outputs.script }}

            - name: üßÆ calculate diff (polyfill)
              if: ${{ steps.download-prev.outputs.dir }}
              id: diff-polyfills
              uses: ./.github/actions/diff
              with:
                  old: ${{ steps.download-prev.outputs.dir }}/${{ steps.build.outputs.polyfills }}
                  new: ${{ steps.build.outputs.dir }}/${{ steps.build.outputs.polyfills }}

            - name: üì§ upload release artifacts
              if: ${{ needs.release.outputs.released }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # get meta filename
                  file="${{ steps.build.outputs.script }}"
                  meta="${{ steps.build.outputs.meta }}"
                  polyfills="${{ steps.build.outputs.polyfills }}"

                  # upload the release artifacts with special nice names
                  gh release upload ${{ needs.release.outputs.tag }} \
                    "${{ steps.build.outputs.dir }}/$file#‚û°Ô∏è [${{ matrix.config }}] ${{ needs.release.outputs.tag }}.user.js" \
                    "${{ steps.build.outputs.dir }}/$meta#[${{ matrix.config }}] ${{ needs.release.outputs.tag }}.meta.js" \
                    "${{ steps.build.outputs.dir }}/$polyfills#[${{ matrix.config }}] ${{ needs.release.outputs.tag }}.polyfills.js"

            # legacy release for uzl, please remove this at earliest in October 2025
            - name: üì§ upload legacy uzl artifact
              if: ${{ needs.release.outputs.released && matrix.config == 'uzl' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  file="${{ steps.build.outputs.script }}"
                  meta="${{ steps.build.outputs.meta }}"
                  cp "${{ steps.build.outputs.dir }}/$file" better-moodle.user.js
                  cp "${{ steps.build.outputs.dir }}/$meta" better-moodle.meta.js

                  # upload the releases
                  gh release upload ${{ needs.release.outputs.tag }} \
                      "better-moodle.user.js#Legacy uzl userscript" \
                      "better-moodle.meta.js#Legacy uzl meta file"
